Qualidade de Software

	Metricas de qualidade de código. 
	
		Ferramentas: (Estudar)
			radon.readthedocs.io/en/latest/#
			https://www.devmedia.com.br/tdd-fundamentos-do-desenvolvimento-orientado-a-testes/28151
		
		Debito Tecnico: 
			Cada vez que deixar uma melhoria/problema para depois, vira um debito tecnico. 
		
		Complexidade Ciclomática: 
			Quanto menor a complexidade, melhor. Fica mais facíl a manteabilidade.
			
		Acoplamento: 
			Grau de dependência em que um artefato (classe, objeto, função, framework) se relaciona com outro.
			Software fica muito dependente. 
			Acoplamento fraco ou  baixo é bom, pois depende muito pouco de uma classe ou etc. 
			Dificulta a criação de teste, pois tem que mocs muito.
				https://pypi.org/project/mocs/
			Aumenta o tempo de desenvolviemnto e manutenção de novas funcionalidades. 
		
		Coesão:
			Está ligado ao principio da responsabilidade unica. 
			Codigo coeso são aqueles onde seus membros estão intimamente ligados e estão ali por um objetivo comum. 
			Baixa coesão, significa  que o componente possui responsailidades alem das suas.
			Dificuldade em dar manutenção.
			Dificulta o reuso de componentes. 
			
		Manuteniabilidade de Software:
			Refere-se á facilidade e segurança em efeturar correções ou novas implementações no software. 
			Baseia-se na relação entre complexibilidade ciclomatica, linhade codigo, custo de correção VS custo de desenvolvimento. 
			*PEP8 (Regras de estilo de código) 
			*PEP257 ()
			*Baixa complexibilidade ciclomatica
			*Baixo acoplamento 
			*Alta coesão
			*Cobertura de código. 	
			
		PEP-8:
			* Link p/ estudar 
				https://www.python.org/dev/peps/pep-0008/
				
			Melhores maneiras, melhores praticas para se escrever. Eficiencia. 
			
			Imports:
				Não se deve importar dois módulos na mesma linha. 
				Ordem do imports IMPORTA MUITO
					*Primeiro o futuro
					*Depois bibliotecas padrões
					*Biblioteca de terceiros
					*Suas bibliotecas
				Não se deve importar usando wildcard
				 Imports não devem substituir modulos builtin
				 
			Tamanho das linhas:
				Linhas só podem ter até 80 caracteres por linha. 
				
			Indentação:
				Não se utiliza tab. Se utiliza 4 "espaços".
				Agrupamento: Existem 6 maneiras diferentes de agrupar blocos de códigos. 
			 
			 Espaços em braco:
			 	Evite fazer espaços em braco. Servem apenas para prolongar o código. 
			 
			 Variáveis:
			 	Constantes devem ter letras maiusculas.
			 	
		PEP-3107 - Anotações de funções:
			* Anotações de funções são completamente opcionais. 
			* As anotações de funções não são mais do que uma forma de associar expressões arbitrárias de Python a várias partes de 		
			  uma função em tempo de compilação. 
		
		PEP-257 - Padrões de comentários:
			* Tudo que começa, termina com ponto final. 
				EX: 
					"""
					
					Comentários do módulo. 
					
					Bananas de pijamas descendo as escadas
					Bananas de pijama uma dupla da pesada
					
					"""
			 	
			 
			
			
			
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
